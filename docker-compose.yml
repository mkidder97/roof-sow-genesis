# docker-compose.yml for roof-sow-genesis
version: '3.8'

services:
  # Frontend + Backend Service
  roof-sow-genesis:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
        VERSION: ${VERSION:-1.0.0}
    ports:
      - "80:80"
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8001}
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    volumes:
      # Mount config files if they exist
      - ./config:/app/config:ro
      # Mount logs directory
      - logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - roof-sow-network

  # Development Service
  roof-sow-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8080:8080"  # Vite dev server
      - "8001:8001"  # MCP/Python backend
      - "5173:5173"  # Alternative Vite port
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8001
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    volumes:
      # Mount source code for hot reloading
      - .:/app
      - /app/node_modules
      # Mount config files
      - ./config:/app/config:ro
    command: npm run dev
    networks:
      - roof-sow-network
    profiles:
      - development

  # Supabase Local (optional)
  supabase-db:
    image: supabase/postgres:15.1.0.147
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: 5432
      POSTGRES_PORT: 5432
      PGDATABASE: postgres
      POSTGRES_DB: postgres
      PGUSER: supabase_admin
      POSTGRES_USER: supabase_admin
      PGPASSWORD: ${POSTGRES_PASSWORD:-your-super-secret-and-long-postgres-password}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your-super-secret-and-long-postgres-password}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      JWT_EXP: ${JWT_EXP:-3600}
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - roof-sow-network
    profiles:
      - local-db

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - roof-sow-network
    profiles:
      - cache

networks:
  roof-sow-network:
    driver: bridge

volumes:
  logs:
  supabase-db-data:
  redis-data:

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.override.yml up
# Or: docker-compose --profile development up roof-sow-dev